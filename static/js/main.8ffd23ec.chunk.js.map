{"version":3,"sources":["MapChart.js","index.js"],"names":["memo","_ref","setTooltipContent","react_default","a","createElement","Fragment","index_umd","data-tip","projection","projectionConfig","scale","zoom","center","geography","_ref2","geographies","map","geo","key","rsmKey","onMouseEnter","num","_geo$properties","properties","NAME","POP_EST","concat","Math","round","onMouseLeave","style","default","fill","outline","hover","pressed","App","_useState","useState","_useState2","Object","slicedToArray","content","setContent","src_MapChart","index_es","rootElement","document","getElementById","ReactDOM","render"],"mappings":"8NAmEeA,iBA9CE,SAAAC,GAA2B,IAAxBC,EAAwBD,EAAxBC,kBAClB,OACEC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACEH,EAAAC,EAAAC,cAACE,EAAA,cAAD,CACEC,WAAS,GACTC,WAAW,cACXC,iBAAkB,CAAEC,MAAO,MAE3BR,EAAAC,EAAAC,cAACE,EAAA,cAAD,CAAeK,KAAM,EAAGC,OAAQ,CAAC,EAAE,KACjCV,EAAAC,EAAAC,cAACE,EAAA,YAAD,CAAaO,UArBrB,0GAsBW,SAAAC,GAAA,OAAAA,EAAGC,YACUC,IAAI,SAAAC,GAAG,OACjBf,EAAAC,EAAAC,cAACE,EAAA,UAAD,CACEY,IAAKD,EAAIE,OACTN,UAAWI,EACXG,aAAc,WAAM,IAzBtBC,EAyBsBC,EACQL,EAAIM,WAAtBC,EADUF,EACVE,KAAMC,EADIH,EACJG,QACdxB,EAAiB,GAAAyB,OAAIF,EAAJ,YAAAE,QA3BrBL,EA2B2CI,GA1B/C,IACDE,KAAKC,MAAMP,EAAM,KAAa,GAAK,KACjCA,EAAM,IACRM,KAAKC,MAAMP,EAAM,KAAU,GAAK,IAEhCM,KAAKC,MAAMP,EAAM,KAAO,GAAK,OAuBtBQ,aAAc,WACZ5B,EAAkB,KAEpB6B,MAAO,CACLC,QAAS,CACPC,KAAM,UACNC,QAAS,QAEXC,MAAO,CACLF,KAAM,OACNC,QAAS,QAEXE,QAAS,CACPH,KAAM,OACNC,QAAS,oBC9C/B,SAASG,IAAM,IAAAC,EACiBC,mBAAS,IAD1BC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACNK,EADMH,EAAA,GACGI,EADHJ,EAAA,GAEb,OACErC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACwC,EAAD,CAAU3C,kBAAmB0C,IAC7BzC,EAAAC,EAAAC,cAACyC,EAAA,EAAD,KAAeH,IAKrB,IAAMI,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OAAOhD,EAAAC,EAAAC,cAACgC,EAAD,MAASU","file":"static/js/main.8ffd23ec.chunk.js","sourcesContent":["import React, { memo } from \"react\";\nimport {\n  ZoomableGroup,\n  ComposableMap,\n  Geographies,\n  Geography\n} from \"react-simple-maps\";\n\nconst geoUrl =\n  \"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json\";\n\nconst rounded = num => {\n  if (num > 1000000000) {\n    return Math.round(num / 100000000) / 10 + \"Bn\";\n  } else if (num > 1000000) {\n    return Math.round(num / 100000) / 10 + \"M\";\n  } else {\n    return Math.round(num / 100) / 10 + \"K\";\n  }\n};\n\nconst MapChart = ({ setTooltipContent }) => {\n  return (\n    <>\n      <ComposableMap\n        data-tip=\"\"\n        projection=\"geoMercator\"\n        projectionConfig={{ scale: 1000 }}\n      >\n        <ZoomableGroup zoom={1} center={[7,50]}>\n          <Geographies geography={geoUrl}>\n            {({ geographies }) =>\n              geographies.map(geo => (\n                <Geography\n                  key={geo.rsmKey}\n                  geography={geo}\n                  onMouseEnter={() => {\n                    const { NAME, POP_EST } = geo.properties;\n                    setTooltipContent(`${NAME} â€” ${rounded(POP_EST)}`);\n                  }}\n                  onMouseLeave={() => {\n                    setTooltipContent(\"\");\n                  }}\n                  style={{\n                    default: {\n                      fill: \"#D6D6DA\",\n                      outline: \"none\"\n                    },\n                    hover: {\n                      fill: \"#F53\",\n                      outline: \"none\"\n                    },\n                    pressed: {\n                      fill: \"#E42\",\n                      outline: \"none\"\n                    }\n                  }}\n                />\n              ))\n            }\n          </Geographies>\n        </ZoomableGroup>\n      </ComposableMap>\n    </>\n  );\n};\n\nexport default memo(MapChart);\n","import React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport ReactTooltip from \"react-tooltip\";\n\nimport \"./styles.css\";\n\nimport MapChart from \"./MapChart\";\n\nfunction App() {\n  const [content, setContent] = useState(\"\");\n  return (\n    <div>\n      <MapChart setTooltipContent={setContent} />\n      <ReactTooltip>{content}</ReactTooltip>\n    </div>\n  );\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}